# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
- group: Anaconda Keys

stages:
- stage: linux_build_stage
  displayName: 'Ubuntu Build Stage'
  jobs:
  - job: buildTools
    displayName: 'Build the Fermitools'
    timeoutInMinutes: 150
    pool: 
      vmImage: 'ubuntu-16.04'
    steps:
    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: 'Add conda to PATH'
    - bash: |
        sudo update-alternatives --remove-all gcc
        sudo update-alternatives --remove-all g++
        sudo apt-get install --yes gcc-4.8 g++-4.8
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 10
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 10
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
        sudo update-alternatives --set cc /usr/bin/gcc
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
        sudo update-alternatives --set c++ /usr/bin/g++
        which gcc
        gcc --version
      displayName: 'Install and set up gcc-4.8'
    - bash: conda install --yes --quiet -c conda-forge python=2.7 conda-build
      displayName: 'Set up build environment'
    - bash: conda build --python=2.7 -c conda-forge/label/cf201901 -c fermi .
      displayName: 'Run the build'

- stage: macos_build_stage
  displayName: 'MacOS Build Stage'
  dependsOn: []
  jobs:
  - job: buildTools
    displayName: 'Build the Fermitools'
    timeoutInMinutes: 150
    pool: 
      vmImage: 'macOS-10.13'
    steps:
    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: 'Add conda to PATH'
    - bash: conda install --yes --quiet -c conda-forge python=2.7 conda-build
      displayName: 'Set up build environment'
    - bash: conda build --python=2.7 -c conda-forge/label/cf201901 -c fermi .
      displayName: 'Run the build'